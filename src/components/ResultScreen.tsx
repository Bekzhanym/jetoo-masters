import React from 'react';
import { getLevel, getLevelDescription } from '../data/questions';
import './ResultScreen.css';

interface ResultScreenProps {
  score: number;
  correctAnswers: number;
  totalQuestions: number;
  sectionScores?: {
    critical: number;
    analytical: number;
    english: number;
  };
  onGetBonus: () => void;
}

const ResultScreen: React.FC<ResultScreenProps> = ({
  score,
  correctAnswers,
  totalQuestions,
  sectionScores,
  onGetBonus
}) => {
  const level = getLevel(score);
  const percentage = Math.round((correctAnswers / totalQuestions) * 100);
  const levelDescription = getLevelDescription(level);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–æ —Å–µ–∫—Ü–∏—è–º
  const getSectionLevel = (sectionScore: number, totalQuestions: number): string => {
    const percentage = (sectionScore / totalQuestions) * 100;
    if (percentage >= 80) return "–ñ–æ“ì–∞—Ä—ã";
    if (percentage >= 60) return "–û—Ä—Ç–∞—à–∞";
    if (percentage >= 40) return "–¢”©–º–µ–Ω";
    return "”ò–ª—Å—ñ–∑";
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —É—Ä–æ–≤–Ω—è
  const getSectionColor = (sectionScore: number, totalQuestions: number): string => {
    const percentage = (sectionScore / totalQuestions) * 100;
    if (percentage >= 80) return "#4CAF50";
    if (percentage >= 60) return "#FF9800";
    if (percentage >= 40) return "#FF5722";
    return "#f44336";
  };

  return (
    <div className="result-screen">
      <div className="result-container">
        <div className="result-header">
          <h1 className="result-title">–ù”ô—Ç–∏–∂–µ“£—ñ–∑</h1>
        </div>

        <div className="result-content">
          <div className="score-section">
            <div className="score-circle">
              {score}
            </div>
            <div className="score-info">
              <h2 className="level-title">{level}</h2>
              <p className="level-description">{levelDescription}</p>
            </div>
          </div>

          <div className="stats-section">
            <div className="stat-item">
              <div className="stat-label">–î“±—Ä—ã—Å –∂–∞—É–∞–ø—Ç–∞—Ä</div>
              <div className="stat-value">{correctAnswers}/{totalQuestions}</div>
            </div>
            <div className="stat-item">
              <div className="stat-label">–ü–∞–π—ã–∑</div>
              <div className="stat-value">{percentage}%</div>
            </div>
          </div>

          {sectionScores && (
            <div className="sections-results">
              <h3 className="sections-title">–°–µ–∫—Ü–∏—è–ª–∞—Ä –±–æ–π—ã–Ω—à–∞ –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä</h3>
              <div className="sections-grid">
                <div className="section-card">
                  <div className="section-header">
                    <h4 className="section-name">–ö—Ä–∏—Ç–∏–∫–∞–ª—ã“õ –æ–π–ª–∞—É</h4>
                    <span className="section-range">1-15 —Å“±—Ä–∞“õ</span>
                  </div>
                  <div className="section-score">
                    <div className="section-number">{sectionScores.critical}/15</div>
                    <div 
                      className="section-level"
                      style={{ color: getSectionColor(sectionScores.critical, 15) }}
                    >
                      {getSectionLevel(sectionScores.critical, 15)}
                    </div>
                  </div>
                  <div className="section-progress">
                    <div 
                      className="section-progress-fill"
                      style={{ 
                        width: `${(sectionScores.critical / 15) * 100}%`,
                        backgroundColor: getSectionColor(sectionScores.critical, 15)
                      }}
                    ></div>
                  </div>
                </div>

                <div className="section-card">
                  <div className="section-header">
                    <h4 className="section-name">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞–ª—ã“õ –æ–π–ª–∞—É</h4>
                    <span className="section-range">16-30 —Å“±—Ä–∞“õ</span>
                  </div>
                  <div className="section-score">
                    <div className="section-number">{sectionScores.analytical}/15</div>
                    <div 
                      className="section-level"
                      style={{ color: getSectionColor(sectionScores.analytical, 15) }}
                    >
                      {getSectionLevel(sectionScores.analytical, 15)}
                    </div>
                  </div>
                  <div className="section-progress">
                    <div 
                      className="section-progress-fill"
                      style={{ 
                        width: `${(sectionScores.analytical / 15) * 100}%`,
                        backgroundColor: getSectionColor(sectionScores.analytical, 15)
                      }}
                    ></div>
                  </div>
                </div>

                <div className="section-card">
                  <div className="section-header">
                    <h4 className="section-name">–ê“ì—ã–ª—à—ã–Ω —Ç—ñ–ª—ñ</h4>
                    <span className="section-range">31-80 —Å“±—Ä–∞“õ</span>
                  </div>
                  <div className="section-score">
                    <div className="section-number">{sectionScores.english}/50</div>
                    <div 
                      className="section-level"
                      style={{ color: getSectionColor(sectionScores.english, 50) }}
                    >
                      {getSectionLevel(sectionScores.english, 50)}
                    </div>
                  </div>
                  <div className="section-progress">
                    <div 
                      className="section-progress-fill"
                      style={{ 
                        width: `${(sectionScores.english / 50) * 100}%`,
                        backgroundColor: getSectionColor(sectionScores.english, 50)
                      }}
                    ></div>
                  </div>
                </div>
              </div>
            </div>
          )}

          <div className="bonus-section">
            <p className="bonus-description">
            –î–µ“£–≥–µ–π—ñ“£–µ —Å–∞–π –∞—Ä–Ω–∞–π—ã –≤–∏–¥–µ–æ—Å–∞–±–∞“õ—Ç—ã —Ç–µ–≥—ñ–Ω –∞–ª!
            </p>
            <button className="bonus-button" onClick={onGetBonus}>
              <span className="bonus-icon">üéÅ</span>
              –ë–æ–Ω—É—Å—Ç—ã –∞–ª—É
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ResultScreen; 